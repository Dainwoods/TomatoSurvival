<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Creates player variables
randomize();
grav = .6 / 2;
hsp = 0;
vsp = 0;
jumpSpeed = 5;
moveSpeed = 4 / 2;

audioEm = audio_emitter_create();
image_speed = 0;

key_left = false;
key_right = false;
key_jump = false;

phase1 = true;
phase2 = false;
phase3 = false;
phase4 = false;

height = 0;

alarm2 = false;
xPos = 0;

alarm3 = false;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Tomato Survival text
if(global.titlePlayerCount == 1) {
    startHeight = 17;
    global.yArr = startHeight;
    //TOMATO
    buildArr(0, 1, 2, 5, 6, 7, 10, 11, 13, 14, 17, 18, 19, 23, 24, 25, 29, 30, 31, -1); //18
    buildArr(1, 5, 7, 10, 11, 12, 13, 14, 17, 19, 24, 29, 31, -1); //17
    buildArr(1, 5, 7, 10, 12, 14, 17, 18, 19, 24, 29, 31, -1); //16
    buildArr(1, 5, 7, 10, 14, 17, 19, 24, 29, 31, -1); //15
    buildArr(1, 5, 6, 7, 10, 14, 17, 19, 24, 29, 30, 31, -1); //14

    //Space
    buildArr(-1); //13
    buildArr(-1); //12
    buildArr(-1); //11

    //SURVIVAL
    buildArr(0, 1, 2, 4, 6, 8, 9, 10, 12, 14, 17, 18, 19, 21, 23, 25, 26, 27, 29, -1); //10
    buildArr(0, 4, 6, 8, 10, 12, 14, 18, 21, 23, 25, 27, 29, -1); //9
    buildArr(0, 1, 2, 4, 6, 8, 9, 12, 14, 18, 21, 23, 25, 26, 27, 29, -1); //8
    buildArr(2, 4, 6, 8, 10, 12, 14, 18, 21, 23, 25, 27, 29, -1); //7
    buildArr(0, 1, 2, 4, 5, 6, 8, 10, 13, 17, 18, 19, 22, 25, 27, 29, 30, 31, -1); //6

    //Last Space
    buildArr(-1); //5
    buildArr(-1); //4
    buildArr(-1); //3
    buildArr(-1); //2

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Hi I'm Alec text
if(global.titlePlayerCount == 2) {
    startHeight = 18;
    global.yArr = startHeight;
    //HI I'M
    buildArr(24, -1);
    buildArr(0, 3, 6, 7, 8, 20, 21, 22, 24, 27, 28, 30, 31, -1);
    buildArr(0, 3, 7, 21, 27, 28, 29, 30, 31, -1);
    buildArr(0, 1, 2, 3, 7, 21, 27, 29, 31, -1);
    buildArr(0, 3, 7, 21, 27, 31, -1);
    buildArr(0, 3, 6, 7, 8, 20, 21, 22, 27, 31, -1);

    //Space
    buildArr(-1); //9
    buildArr(-1); //8
    buildArr(-1);

    //ALEC
    buildArr(0, 1, 2, 9, 20, 21, 22, 29, 30, 31, -1);
    buildArr(0, 2, 9, 20, 29, -1);
    buildArr(0, 1, 2, 9, 20, 21, 29, -1);
    buildArr(0, 2, 9, 20, 29, -1);
    buildArr(0, 2, 9, 10, 11, 20, 21, 22, 29, 30, 31, -1);

    //Last Space
    buildArr(-1); //2
    buildArr(-1); //1
    buildArr(-1);
    buildArr(-1);
    buildArr(-1);

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Build Collect Survive text
if(global.titlePlayerCount == 3) {
    global.alecDiscovered = true;
    startHeight = 18;
    global.yArr = startHeight;
    //BUILD
    buildArr(0, 1, 4, 6, 8, 9, 10, 12, 17, 18, -1); //21
    buildArr(0, 2, 4, 6, 9, 12, 17, 19, -1); //20
    buildArr(0, 1, 4, 6, 9, 12, 17, 19, -1); //19
    buildArr(0, 2, 4, 6, 9, 12, 17, 19, -1); //18
    buildArr(0, 1, 4, 5, 6, 8, 9, 10, 12, 13, 14, 17, 18, -1); //17

    //Space
    buildArr(-1); //16
    
    //COLLECT
    buildArr(0, 1, 2, 4, 5, 6, 8, 12, 17, 18, 19, 21, 22, 23, 25, 26, 27, -1); //14
    buildArr(0, 4, 6, 8, 12, 17, 21, 26, -1); //13
    buildArr(0, 4, 6, 8, 12, 17, 18, 21, 26, -1); //12
    buildArr(0, 4, 6, 8, 12, 17, 21, 26, -1); //11
    buildArr(0, 1, 2, 4, 5, 6, 8, 9, 10, 12, 13, 14, 17, 18, 19, 21, 22, 23, 26, -1); //10

    //Space
    buildArr(-1); //9

    //SURVIVE
    buildArr(0, 1, 2, 4, 6, 8, 9, 10, 12, 14, 17, 18, 19, 21, 23, 25, 26, 27, -1); //7
    buildArr(0, 4, 6, 8, 10, 12, 14, 18, 21, 23, 25, -1); //6
    buildArr(0, 1, 2, 4, 6, 8, 9, 12, 14, 18, 21, 23, 25, 26, -1); //5
    buildArr(2, 4, 6, 8, 10, 12, 14, 18, 21, 23, 25, -1); //4
    buildArr(0, 1, 2, 4, 5, 6, 8, 10, 13, 17, 18, 19, 22, 25, 26, 27, -1); //3

    //Last Space
    buildArr(-1); //2
    buildArr(-1); //1

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>key_right = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create((global.arr[height, xPos] * 32) + 16, 736 - ((height * 32) + 16), obj_titleBuildingBlock);
alarm2 = false;
xPos++;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(instance_position((16 * 32) - 16, 736 - ((height * 32) - 16), obj_titleBuildingBlock)) {
    instance_destroy();
}
with(instance_position((16 * 32) + 16, 736 - ((height * 32) - 16), obj_titleBuildingBlock)) {
    instance_destroy();
}
with(obj_titlePlayer) {
    height--;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_create((16 * 32) - 16, 736 - ((height * 32) - 16), obj_titleBuildingBlock);
instance_create((16 * 32) + 16, 736 - ((height * 32) - 16), obj_titleBuildingBlock);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Basic Player Movement
//Get the player's movement input
if(!global.paused) {

isJumping = false;

//React to inputs
move = key_left + key_right;
hsp = move * moveSpeed;
if(vsp &lt; 10) {
    vsp += grav;
}

//Player can only jump while on a walkable object
if((place_meeting(x, y + 1, par_walkable) || place_meeting(x, y + 1, obj_timeBomb))) {
    vsp = key_jump * -jumpSpeed;
    if(key_jump == 1) {
        isJumping = true;
    }
}

//If there is a wall/block to the right/left and player is moving in that direction,
//move as far in the direction of the wall/block as possible.
if(place_meeting(x + hsp, y, par_walkable)|| place_meeting(x + hsp, y, obj_timeBomb)) {
    while(!place_meeting(x + sign(hsp), y, par_walkable) &amp;&amp; !place_meeting(x + sign(hsp), y, obj_timeBomb)) {
        x += sign(hsp);
    }
    hsp = 0;
}
x += hsp;

//if there is a wall beneath/above player and player is moving in that direction,
//move as far in the direction of the wall as possible.
if(place_meeting(x, y + vsp, par_walkable)|| place_meeting(x, y + vsp, obj_timeBomb) ) {
    while(!place_meeting(x, y + sign(vsp), par_walkable) &amp;&amp; !place_meeting(x, y + sign(vsp), obj_timeBomb)) {
        y += sign(vsp);
    }
    vsp = 0;
}
y += vsp;

}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Player sprite controller
if(!global.paused) {


//Standing still
if(move == 0 &amp;&amp; vsp == 0) {
    if(image_index &lt; 16 || image_index &gt;= 20) {
        image_index = 16;
    }
    image_speed= .2 / 2;
}
//Moving right
else if(move &gt; 0 &amp;&amp; vsp == 0) {
    if(image_index &lt; 8 || image_index &gt;= 15) {
        image_index = 8;
    }
    image_speed = .2 / 2;
}
//Moving left
else if(move &lt; 0 &amp;&amp; vsp == 0) {
    if(image_index &gt;= 7 || image_index &gt; 15) {
        image_index = 0;
    }
    image_speed = .2 / 2;
}
//Falling
else if(vsp != 0) {
    image_index = 26;
}

}

else {
    //Standing still
    image_speed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Execute phases
key_jump = 0
if(phase1) {
    if(x != room_width / 2) {
        key_right = true;
    }
    else {
        key_right = false;
        phase1 = false;
        phase2 = true;
    }
}

else if(phase2) {
    if(height &lt; startHeight &amp;&amp; place_meeting(x, y + 1, par_walkable)) {
        key_jump = 1;
        height++;
        alarm[0] = .25 * room_speed;
    }
    if(height == startHeight) {
        phase2 = false;
        phase3 = true;
    }
    
}

else if(phase3) {
    if(place_meeting(x, y + 1, par_walkable) &amp;&amp; height &gt; 0) {
        if(global.arr[height, xPos] == -1) {
            xPos = 0;
            alarm[1] = 1;
        }
        else if(!alarm2) {
            alarm[2] = .25 * room_speed;
            alarm2 = true;
        }
    }
    else if(height == 0) {
        phase3 = false;
        phase4 = true;
    }
}

else if(phase4) {
    if(place_meeting(x, y + 1, obj_titleWall) &amp;&amp; !alarm3) {
        alarm[3] = room_speed;
        alarm3 = true;
    }
    if(obj_titlePlayer.x &gt; room_width + 16) {
        num = irandom_range(1, 3);
        //Direction Bombs
        if(num == 1) {
            if(global.titlePlayerCount == 1) {
                with(obj_titleHandler) {
                    bombStartHeight = 18;
                    bombEndHeight = 6;
                    alarm[0] = 5 * room_speed;
                }
            }
            else if(global.titlePlayerCount == 2) {
                with(obj_titleHandler) {
                    bombStartHeight = 19;
                    bombEndHeight = 6;
                    alarm[0] = 5 * room_speed;
                }
            }
            else if(global.titlePlayerCount == 3) {
                with(obj_titleHandler) {
                    bombStartHeight = 19;
                    bombEndHeight = 3;
                    alarm[0] = 5 * room_speed;
                }
            }
        }
        
        //Rain
        else if(num == 2) {
            instance_create(512, 32, obj_titleClouds);
        }
        
        //Earthquake
        else if(num == 3) {
            instance_create(0, 0, obj_titleEarthquake);
        }
        
        with(obj_titlePlayer) {
            instance_destroy();
        }
    }
}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
