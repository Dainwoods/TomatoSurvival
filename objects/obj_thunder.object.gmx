<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>pointArr = undefined;
currentIndex = 1;
startX = irandom_range(0, room_width);
startX = startX - (startX mod(32)) + 16;
startY = 16;
var vector;
vector[0] = startX;
vector[1] = startY;
pointArr[0] = vector;
endX = 0;
endY = 0;
draw = false;
alarm[0] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw = true;
/*if(is_undefined(pointArr)) {
    var vector;
    vector[0] = startX;
    vector[1] = startY;
    endX = startX + choose(-32, 0, 32);
    endY = startY + 32;
    pointArr[0] = vector;
    currentIndex = 1;
    alarm[0] = 23 / (2 * room_speed);
}*/
if(currentIndex &lt; array_length_1d(pointArr)) {
    var oldVector = pointArr[currentIndex - 1];
    startX = oldVector[0];
    startY = oldVector[1];
    var vector; 
    endX = startX + choose(-32, 0, 32);
    endY = startY + 32;
    vector[0] = endX;
    vector[1] = endY;
    pointArr[currentIndex] = vector;
    currentIndex++;
    alarm[0] = 23 / (2 * room_speed);
    draw = true;
    /*var oldVector = pointArr[currentIndex - 1];
    var vector = pointArr[currentIndex];
    startX = oldVector[0];
    startY = oldVector[1];
    endX = vector[0];
    endY = vector[1];
    currentIndex++;
    alarm[0] = 23 / (2 * room_speed);
    show_debug_message(string(startX) + ", " + string(startY));
    show_debug_message(string(endX) + ", " + string(endY));*/
}
else {
    lightningStrike(pointArr);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.paused) {
    alarm[0]++;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_line_width_color(startX, startY, endX, endY, 10, c_white, c_white);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
